<sdf version="1.8">
    <model name='vehicle_blue'>
        <canonical_link>chassis</canonical_link>
        <plugin
            filename="gz-sim-pose-publisher-system"
            name="gz::sim::systems::PosePublisher">
            <use_pose_vector_msg>true</use_pose_vector_msg>
            <publish_nested_model_pose>true</publish_nested_model_pose>
        </plugin>   

        <link name='chassis'>
            <pose relative_to='__model__'>0.5 0 0.4 0 0 0</pose>
            <inertial> <!--inertial properties of the link mass, inertia matix-->
                <mass>10.14395</mass>
                <inertia>
                    <ixx>0.126164</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.416519</iyy>
                    <iyz>0</iyz>
                    <izz>0.481014</izz>
                </inertia>
            </inertial>
            <visual name='visual'>
                <geometry>
                    <box>
                        <size>2.0 1.0 0.5</size> <!--question: this size is in meter-->
                    </box>
                </geometry>
                <!--let's add color to our link-->
                <material>
                    <ambient>0.0 0.0 1.0 1</ambient>
                    <diffuse>0.0 0.0 1.0 1</diffuse>
                    <specular>0.0 0.0 1.0 1</specular>
                </material>
            </visual>
            <collision name='collision'> <!--todo: describe why we need the collision-->
                <geometry>
                    <box>
                        <size>2.0 1.0 0.5</size>
                    </box>
                </geometry>
            </collision>
        </link>

        <!-- Attach a camera to the nose of the bot -->
        <link name="camera">
            <pose relative_to="chassis">1.0 0 0 0 0 0</pose>
            <inertial>
              <mass>0.1</mass>
              <inertia>
                <ixx>0.000166667</ixx>
                <iyy>0.000166667</iyy>
                <izz>0.000166667</izz>
              </inertia>
            </inertial>
            <collision name="collision">
              <geometry>
                <box>
                  <size>0.1 0.1 0.1</size>
                </box>
              </geometry>
            </collision>
            <visual name="visual">
              <geometry>
                <box>
                  <size>0.1 0.1 0.1</size>
                </box>
              </geometry>
            </visual>
            <sensor name="camera" type="camera">
              <camera>
                <horizontal_fov>1.047</horizontal_fov>
                <image>
                  <width>1280</width>
                  <height>720</height>
                </image>
                <clip>
                  <near>0.1</near>
                  <far>100</far>
                </clip>
              </camera>
              <always_on>1</always_on>
              <update_rate>30</update_rate>
              <visualize>true</visualize>
              <topic>camera</topic>
              <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            </sensor>
          </link>

        <joint name="camera_joint" type="fixed">
            <parent>chassis</parent>
            <child>camera</child>
        </joint>

        <!-- Lidar Sensor -->
        <link name="lidar">
            <pose relative_to="chassis">-0.5 0 0.5 0 0 0</pose>
            <collision name="collision">
                <geometry>
                    <cylinder>
                        <radius>0.1</radius>
                        <length>0.1</length>
                    </cylinder>
                </geometry>
            </collision>
            <visual name="visual">
                <geometry>
                    <cylinder>
                        <radius>0.1</radius>
                        <length>0.1</length>
                    </cylinder>
                </geometry>
            </visual>
            <sensor name='gpu_lidar' type='gpu_lidar'>"
                <pose relative_to='lidar_frame'>0 0 0 0 0 0</pose>
                <topic>lidar</topic>
                <update_rate>10</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>7200</samples>
                            <resolution>1</resolution>
                            <min_angle>0</min_angle>
                            <max_angle>6.28</max_angle>
                        </horizontal>
                        <vertical>
                            <samples>1</samples>
                            <resolution>0.01</resolution>
                            <min_angle>0</min_angle>
                            <max_angle>0</max_angle>
                        </vertical>
                    </scan>
                    <range>
                        <min>0.08</min>
                        <max>10.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <always_on>1</always_on>
                <visualize>true</visualize>
            </sensor>
        </link>

        <joint name="lidar_joint" type="fixed">
            <parent>chassis</parent>
            <child>lidar</child>
        </joint>

        <link name="imu_link">
            <pose relative_to="chassis">-0.5 0 0 0 0 0</pose>
            <sensor name='imu_sensor' type='imu'>"
                <pose relative_to='imu_frame'>0 0 0 0 0 0</pose>
                  <update_rate>100</update_rate> 
                  <topic>imu</topic>
                  <imu>
                    <angular_velocity>
                      <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>0.01</stddev> 
                      </noise>
                    </angular_velocity>
                    <linear_acceleration>
                      <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>0.1</stddev> 
                      </noise>
                    </linear_acceleration>
                  </imu>
              </sensor>
        </link>

        <joint name="imu_joint" type="fixed">
            <parent>chassis</parent>
            <child>imu_link</child>
        </joint>

        <!--let's build the left wheel-->
        <link name='left_wheel'>
            <pose relative_to="chassis">-0.5 0.6 0 -1.5707 0 0</pose> <!--angles are in radian-->
            <inertial>
                <mass>2</mass>
                <inertia>
                    <ixx>0.145833</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.145833</iyy>
                    <iyz>0</iyz>
                    <izz>0.125</izz>
                </inertia>
            </inertial>
            <visual name='visual'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
                <material>
                    <ambient>1.0 0.0 0.0 1</ambient>
                    <diffuse>1.0 0.0 0.0 1</diffuse>
                    <specular>1.0 0.0 0.0 1</specular>
                </material>
            </visual>
            <collision name='collision'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
                  <surface>
                <friction>
                  <ode>
                    <mu>0.9</mu> <!-- Static friction -->
                    <mu2>0.7</mu2> <!-- Kinetic friction -->
                  </ode>
                </friction>
              </surface>
            </collision>
        </link>

        <!--copy and paste for right wheel but change position-->
        <link name='right_wheel'>
            <pose relative_to="chassis">-0.5 -0.6 0 -1.5707 0 0</pose> <!--angles are in radian-->
            <inertial>
                <mass>1</mass>
                <inertia>
                    <ixx>0.145833</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.145833</iyy>
                    <iyz>0</iyz>
                    <izz>0.125</izz>
                </inertia>
            </inertial>
            <visual name='visual'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
                <material>
                    <ambient>1.0 0.0 0.0 1</ambient>
                    <diffuse>1.0 0.0 0.0 1</diffuse>
                    <specular>1.0 0.0 0.0 1</specular>
                </material>
            </visual>
            <collision name='collision'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
                  <surface>
                <friction>
                  <ode>
                    <mu>0.9</mu> <!-- Static friction -->
                    <mu2>0.7</mu2> <!-- Kinetic friction -->
                  </ode>
                </friction>
              </surface>
            </collision>
        </link>

        <frame name="caster_frame" attached_to='chassis'>
            <pose>0.8 0 -0.2 0 0 0</pose>
        </frame>

        <!--caster wheel-->
        <link name='caster'>
            <pose relative_to='caster_frame'/>
            <inertial>
                <mass>1</mass>
                <inertia>
                    <ixx>0.1</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.1</iyy>
                    <iyz>0</iyz>
                    <izz>0.1</izz>
                </inertia>
            </inertial>
            <visual name='visual'>
                <geometry>
                    <sphere>
                        <radius>0.2</radius>
                    </sphere>
                </geometry>
                <material>
                    <ambient>0.0 1 0.0 1</ambient>
                    <diffuse>0.0 1 0.0 1</diffuse>
                    <specular>0.0 1 0.0 1</specular>
                </material>
            </visual>
            <collision name='collision'>
                <geometry>
                    <sphere>
                        <radius>0.2</radius>
                    </sphere>
                </geometry>
            </collision>
        </link>

        <!--connecting these links together using joints-->
        <joint name='left_wheel_joint' type='revolute'> <!--continous joint is not supported yet-->
            <pose relative_to='left_wheel'/>
            <parent>chassis</parent>
            <child>left_wheel</child>
            <axis>
                <xyz expressed_in='__model__'>0 1 0</xyz> <!--can be defined as any frame or even arbitrary frames-->
                <limit>
                    <lower>-1.79769e+308</lower>    <!--negative infinity-->
                    <upper>1.79769e+308</upper>     <!--positive infinity-->
                </limit>
            </axis>
        </joint>

        <joint name='right_wheel_joint' type='revolute'>
            <pose relative_to='right_wheel'/>
            <parent>chassis</parent>
            <child>right_wheel</child>
            <axis>
                <xyz expressed_in='__model__'>0 1 0</xyz>
                <limit>
                    <lower>-1.79769e+308</lower>    <!--negative infinity-->
                    <upper>1.79769e+308</upper>     <!--positive infinity-->
                </limit>
            </axis>
        </joint>

        <!--different type of joints ball joint--> <!--defult value is the child-->
        <joint name='caster_wheel' type='ball'>
            <parent>chassis</parent>
            <child>caster</child>
        </joint>

        <!--diff drive plugin-->
        <plugin
            filename="gz-sim-diff-drive-system"
            name="gz::sim::systems::DiffDrive">
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <wheel_separation>1.2</wheel_separation>
            <wheel_radius>0.4</wheel_radius>
            <odom_publish_frequency>100</odom_publish_frequency>
            <topic>cmd_vel</topic>
        </plugin>

    </model>
</sdf>